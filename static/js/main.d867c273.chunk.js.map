{"version":3,"sources":["logo.svg","CategoryPick.js","Question.js","Game.js","App.js","index.js"],"names":["module","exports","CategoryPick","props","useState","label","value","selectedCategory","setSelectedCategory","selectedDifficulty","setSelectedDifficulty","error","categoryList","handleClick","categoryOptions","Array","from","index","name","id","difficultyOptions","map","difficulty","toLowerCase","className","message","onChange","e","options","placeholder","onClick","Question","useParams","htmlEntities","Html5Entities","answerOptions","setAnswerOptions","selectedAnswer","setSelectedAnswer","isLoading","setIsLoading","questionList","JSON","parse","localStorage","getItem","questionObj","questionText","decode","question","history","useHistory","health","score","nextQuestion","push","Number","useEffect","incorrect_answers","correct_answer","array","temporaryValue","randomIndex","currentIndex","length","Math","floor","random","shuffle","console","log","hearts","heart","style","display","answerOptionsButtons","option","i","type","key","checked","htmlFor","preventDefault","newScore","setItem","newHealth","slice","stringify","setTimeout","playAgain","Game","setCategoryList","setError","clear","undefined","window","location","reload","getQuestions","axios","get","then","res","data","results","catch","err","trivia_categories","document","body","cursor","exact","path","children","App","ReactDOM","render","getElementById"],"mappings":"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","file":"static/js/main.d867c273.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/logo.5d5d9eef.svg\";","import React, {useState} from 'react'\nimport {Link} from 'react-router-dom'\nimport \"react-select/dist/react-select.css\"\nimport \"react-virtualized-select/styles.css\"\nimport Select from 'react-virtualized-select'\n\nexport default function CategoryPick(props){\n   const [selectedCategory, setSelectedCategory] = useState({label: \"Select Category\", value: \"\"});\n   const [selectedDifficulty, setSelectedDifficulty] = useState({label: \"Select Difficulty\", value: \"medium\"});\n   const {error, categoryList, handleClick} = props;\n   const difficultyList = [\"Easy\", \"Medium\", \"Hard\"];\n   const categoryOptions = Array.from(categoryList, (categoryList, index) => ({\n      label: categoryList.name,\n      value: categoryList.id\n   }));\n   const difficultyOptions = difficultyList.map((difficulty) => ({\n      label: difficulty,\n      value: difficulty.toLowerCase()\n   }));\n\n   function handleCategoryChange(e){\n      setSelectedCategory(e);\n   }\n\n   function handleDifficultyChange(e){\n      setSelectedDifficulty(e);\n   }\n\n   return (\n      <div className=\"container\">\n         <div className=\"box\">\n               <h1>Welcome to Trivia Royale!</h1>\n               {error ? <li>{error.message}</li> : <Select className=\"selectBox\" onChange={handleCategoryChange} options={categoryOptions} placeholder={selectedCategory.label}/>}\n               {error ? <li>{error.message}</li> : <Select className=\"selectBox\" onChange={handleDifficultyChange} options={difficultyOptions} placeholder={selectedDifficulty.label}/>}\n               <button onClick={() => handleClick(selectedCategory.value, selectedDifficulty.value)}>Okay!</button>\n         </div>\n      </div>\n   )\n}\n","import React, {useState, useEffect} from 'react'\nimport {useParams, useHistory} from 'react-router-dom'\nimport { Html5Entities } from 'html-entities';\n\nexport default function Question(props){\n   const { id } = useParams()\n   const htmlEntities = new Html5Entities();\n   const [answerOptions, setAnswerOptions] = useState([]);\n   const [selectedAnswer, setSelectedAnswer] = useState();\n   const [isLoading, setIsLoading] = useState(false);\n   const questionList = JSON.parse(localStorage.getItem('questionList'));\n   const questionObj = questionList[id - 1];\n   const questionText = htmlEntities.decode(questionObj.question);\n   const history = useHistory();\n   const health = JSON.parse(localStorage.getItem('health'));\n   const score = localStorage.getItem('score');\n\n   useEffect(() => {\n      setIsLoading(true)\n      // get all incorrect answers\n      let options = questionObj.incorrect_answers\n      // push in the correct answer to get a full answers list\n      options.push(questionObj.correct_answer)\n      // shuffle those answers to give variety to the options in all questions\n      options = shuffle(options)\n      // give those options to the user\n      setAnswerOptions(options)\n      setIsLoading(false)\n   },[id])\n\n   //found at (https://bost.ocks.org/mike/shuffle/) great implementation of a random shuffle\n   function shuffle(array) {\n      var currentIndex = array.length, temporaryValue, randomIndex;\n\n      // While there remain elements to shuffle...\n      while (0 !== currentIndex) {\n\n         // Pick a remaining element...\n         randomIndex = Math.floor(Math.random() * currentIndex);\n         currentIndex -= 1;\n         // And swap it with the current element.\n         temporaryValue = array[currentIndex];\n         array[currentIndex] = array[randomIndex];\n         array[randomIndex] = temporaryValue;\n      }\n      return array;\n   }\n\n   function nextQuestion(){\n      history.push(`/questions/${Number(id) + 1}`)\n   }\n\n   function handleClick(e){\n      setSelectedAnswer(e)\n   }\n\n   function handleSubmit(e){\n      e.preventDefault();\n      if (selectedAnswer === questionObj.correct_answer){\n         let newScore = score;\n         newScore++;\n         localStorage.setItem('score', newScore);\n      }\n      else {\n         if (health.length === 1){\n            let newHealth = health.slice(1);\n            localStorage.setItem('health', JSON.stringify(newHealth));\n            history.push('/game/over');\n            return\n         }else {\n            let newHealth = health.slice(1);\n            localStorage.setItem('health', JSON.stringify(newHealth));\n         }\n      }\n      if (Number(id) === questionList.length){\n         history.push(`/game/over`)\n      }else {\n         setTimeout(nextQuestion, 50)\n      }\n\n   }\n   console.log(questionList);\n   if (isLoading)\n   {\n      return(\n         <div className=\"container\">\n            <div className=\"box\">\n               <h1>Loading...</h1>\n            </div>\n         </div>\n\n      )\n   }\n   else\n   {\n      const hearts = health.map(heart => {\n         return (<h1 style={{display: \"inline\"}}>{heart}</h1>)\n      })\n\n      const answerOptionsButtons = answerOptions.map((option, i) => {\n         return (\n            <div className=\"radio\" onClick={() => handleClick(option)}>\n               <input type=\"radio\" key={i} checked={selectedAnswer === option} value={option}  name={`question${i}`}/>\n               <label htmlFor={`question${i}`}>\n                  {htmlEntities.decode(option)}\n               </label>\n            </div>\n         )\n\n         })\n      return (\n         <div className=\"container\">\n            <div className=\"box\">\n               <p>{id}/10</p>\n               {hearts}\n               <h1>{questionText}</h1>\n               <form>\n                  {answerOptionsButtons}\n                  <button onClick={handleSubmit}>Submit</button>\n\n               </form>\n               <br/>\n               <a onClick={props.playAgain}>Play again</a>\n            </div>\n         </div>\n      )\n   }\n}\n","import React, {useState, useEffect} from 'react'\nimport {Route, useHistory} from 'react-router-dom'\nimport axios from 'axios'\nimport CategoryPick from './CategoryPick'\nimport Question from './Question'\n\n\nexport default function Game(){\n   const [health, setHealth] = useState(localStorage.getItem('health') || '')\n   const [categoryList, setCategoryList] = useState([]);\n   const [questionList, setQuestionList] = useState(localStorage.getItem('questionList') || '');\n   const [selectedCategory, setSelectedCategory] = useState();\n   const [selectedDifficulty, setSelectedDifficulty] = useState();\n   const [isLoading, setIsLoading] = useState(false);\n   const [error, setError] = useState('');\n   const history = useHistory();\n\n   function handleClick(id, difficulty){\n      setSelectedCategory(id);\n      setSelectedDifficulty(difficulty);\n   }\n\n   function playAgain(e){\n      e.preventDefault();\n      localStorage.clear();\n      setSelectedCategory(undefined);\n      history.push('/');\n   }\n   function playAgain(){\n      setIsLoading(true);\n      localStorage.clear();\n      history.push('/');\n      window.location.reload();\n   }\n   function getCategories(){\n      axios.get('https://opentdb.com/api_category.php')\n         .then( res => {\n            setCategoryList(res.data.trivia_categories);\n            setIsLoading(false);\n         })\n         .catch(err => {\n            setError(err.message);\n            setIsLoading(false);\n         })\n   }\n   function getQuestions(){\n      axios.get(`https://opentdb.com/api.php?amount=10&category=${selectedCategory}&difficulty=${selectedDifficulty}`)\n         .then( res => {\n            localStorage.setItem('questionList', JSON.stringify(res.data.results));\n            localStorage.setItem('health', JSON.stringify(['❤️','❤️','❤️']));\n            localStorage.setItem('score', 0);\n            setIsLoading(false);\n            history.push('/questions/1');\n         }).catch(err => {\n            setError(err.message);\n            setIsLoading(false);\n         })\n   }\n   useEffect(() => {\n      if (selectedCategory === undefined){\n         getCategories();\n      }\n      else\n      {\n         setIsLoading(true);\n         setTimeout(getQuestions, 1000);\n      }\n   },[selectedCategory])\n\n   if (isLoading) {\n      document.body.style.cursor = 'wait';\n      return (\n         <div className=\"container\">\n            <div className=\"box\">\n               <h1>Loading...</h1>\n            </div>\n         </div>\n      )\n\n   } else {\n      document.body.style.cursor = 'default';\n      return (\n         <>\n            <Route exact path='/'>\n               <CategoryPick handleClick={handleClick} categoryList={categoryList} />\n            </Route>\n            <Route path='/game/over'>\n               <div className=\"container\">\n                  <div className=\"box\">\n                     <h1>{health.length < 1 ? \"YOU DIED\" : \"GAME OVER\"}</h1>\n                     <h2>You scored: {localStorage.getItem('score')} points!</h2>\n                     <button onClick={playAgain}>Play again</button>\n                  </div>\n               </div>\n            </Route>\n            <Route path='/questions/:id' children={<Question playAgain={playAgain}/>} />\n         </>\n      )\n   }\n}\n","import React from 'react';\nimport logo from './logo.svg';\nimport './App.css';\nimport {HashRouter as Router, Switch, Route} from 'react-router-dom'\nimport Home from \"./Home\"\nimport Game from './Game'\n\nfunction App() {\n  return (\n     <Router>\n            <Switch>\n               <Route exact path='/'>\n                  <Game />\n               </Route>\n               <Route path='/'>\n                  <Game />\n               </Route>\n            </Switch>\n     </Router>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}